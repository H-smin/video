{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/huangshumin/nodeworks/videomerge/src/component/direct-content/direct-content.js\";\nimport React from 'react';\nimport './direct-content.css';\nimport PropTypes from 'prop-types';\nexport default class DirectContent extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSubLive = (partNum, liveTime, playNum, studyProgress, studyStatus) => {\n      let emptyArr = [];\n\n      if (!!partNum) {\n        emptyArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"part-num\",\n          children: [partNum, \"\\u4EBA\\u53C2\\u4E0E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this));\n      }\n\n      if (!!liveTime) {\n        emptyArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"live-time\",\n          children: [liveTime, \"\\u76F4\\u64AD\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this));\n      }\n\n      if (!!playNum) {\n        emptyArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"play-num\",\n          children: [playNum, \"\\u6B21\\u64AD\\u653E\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this));\n      }\n\n      if (!!studyProgress) {\n        emptyArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"study-progress\",\n          children: [\"\\u5DF2\\u5B66\", studyProgress]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this));\n      }\n\n      if (!!studyStatus) {\n        emptyArr.push( /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"study-status\",\n          children: studyStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this));\n      }\n\n      return emptyArr;\n    };\n\n    this.getEveryPageArr = (directData, totalPage) => {\n      let newArr = [];\n\n      for (let i = 1; i <= totalPage; i++) {\n        for (let j = 0; j <= directData.length; j + 5) {\n          newArr.push(directData.splice(j, j + 5));\n        }\n      }\n\n      return newArr;\n    };\n  }\n\n  render() {\n    const {\n      directData = []\n    } = this.props;\n    const totalPage = parseInt(Math.ceil(directData.length / 5));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DirectContent\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.getEveryPageArr(directData, totalPage)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nDirectContent.defaultProps = {\n  attribute: 0,\n  sectionTitle: '',\n  teacherName: '',\n  partNum: '',\n  liveTime: '',\n  playNum: '',\n  studyProgress: '',\n  studyStatus: '',\n  videoTime: ''\n};","map":{"version":3,"sources":["/Users/huangshumin/nodeworks/videomerge/src/component/direct-content/direct-content.js"],"names":["React","PropTypes","DirectContent","Component","renderSubLive","partNum","liveTime","playNum","studyProgress","studyStatus","emptyArr","push","getEveryPageArr","directData","totalPage","newArr","i","j","length","splice","render","props","parseInt","Math","ceil","defaultProps","attribute","sectionTitle","teacherName","videoTime"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAGA,eAAe,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAA4C;AAAA;AAAA;;AAAA,SAYzDC,aAZyD,GAYzC,CAACC,OAAD,EAAUC,QAAV,EAAoBC,OAApB,EAA6BC,aAA7B,EAA4CC,WAA5C,KAA4D;AAC1E,UAAIC,QAAQ,GAAC,EAAb;;AACA,UAAG,CAAC,CAACL,OAAL,EAAa;AACXK,QAAAA,QAAQ,CAACC,IAAT,eAAc;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,qBAA2BN,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD;;AACD,UAAG,CAAC,CAACC,QAAL,EAAc;AACZI,QAAAA,QAAQ,CAACC,IAAT,eAAc;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,qBAA4BL,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD;;AACD,UAAG,CAAC,CAACC,OAAL,EAAa;AACXG,QAAAA,QAAQ,CAACC,IAAT,eAAc;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,qBAA2BJ,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD;;AACD,UAAG,CAAC,CAACC,aAAL,EAAmB;AACjBE,QAAAA,QAAQ,CAACC,IAAT,eAAc;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,qCAAmCH,aAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD;;AACD,UAAG,CAAC,CAACC,WAAL,EAAiB;AACfC,QAAAA,QAAQ,CAACC,IAAT,eAAc;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,oBAA+BF;AAA/B;AAAA;AAAA;AAAA;AAAA,gBAAd;AACD;;AACD,aAAOC,QAAP;AAED,KA/BwD;;AAAA,SAgCzDE,eAhCyD,GAgCvC,CAACC,UAAD,EAAYC,SAAZ,KAA0B;AAC1C,UAAIC,MAAM,GAAC,EAAX;;AACA,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAEF,SAAhB,EAA2BE,CAAC,EAA5B,EAA+B;AAC7B,aAAI,IAAIC,CAAC,GAAC,CAAV,EAAcA,CAAC,IAAEJ,UAAU,CAACK,MAA5B,EAAmCD,CAAC,GAAC,CAArC,EAAuC;AACrCF,UAAAA,MAAM,CAACJ,IAAP,CAAYE,UAAU,CAACM,MAAX,CAAkBF,CAAlB,EAAoBA,CAAC,GAAC,CAAtB,CAAZ;AACD;AACF;;AACD,aAAOF,MAAP;AACD,KAxCwD;AAAA;;AAyCzDK,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,UAAU,GAAG;AAAf,QAAqB,KAAKQ,KAAhC;AACA,UAAMP,SAAS,GAACQ,QAAQ,CAACC,IAAI,CAACC,IAAL,CAAUX,UAAU,CAACK,MAAX,GAAoB,CAA9B,CAAD,CAAxB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,6BAyBE;AAAA,kBAAM,KAAKN,eAAL,CAAqBC,UAArB,EAAgCC,SAAhC;AAAN;AAAA;AAAA;AAAA;AAAA;AAzBF;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAzEwD;AAAtCZ,a,CACZuB,Y,GAAe;AACpBC,EAAAA,SAAS,EAAE,CADS;AAEpBC,EAAAA,YAAY,EAAE,EAFM;AAGpBC,EAAAA,WAAW,EAAE,EAHO;AAIpBvB,EAAAA,OAAO,EAAE,EAJW;AAKpBC,EAAAA,QAAQ,EAAE,EALU;AAMpBC,EAAAA,OAAO,EAAE,EANW;AAOpBC,EAAAA,aAAa,EAAE,EAPK;AAQpBC,EAAAA,WAAW,EAAE,EARO;AASpBoB,EAAAA,SAAS,EAAE;AATS,C","sourcesContent":["import React from 'react'\nimport './direct-content.css'\nimport PropTypes from 'prop-types'\n\n\nexport default class DirectContent extends React.Component {\n  static defaultProps = {\n    attribute: 0,\n    sectionTitle: '',\n    teacherName: '',\n    partNum: '',\n    liveTime: '',\n    playNum: '',\n    studyProgress: '',\n    studyStatus: '',\n    videoTime: ''\n  }\n  renderSubLive = (partNum, liveTime, playNum, studyProgress, studyStatus) => {\n    let emptyArr=[]\n    if(!!partNum){\n      emptyArr.push(<div className='part-num'>{partNum}人参与</div>)\n    }\n    if(!!liveTime){\n      emptyArr.push(<div className='live-time'>{liveTime}直播</div>)\n    }\n    if(!!playNum){\n      emptyArr.push(<div className='play-num'>{playNum}次播放</div>)\n    }\n    if(!!studyProgress){\n      emptyArr.push(<div className='study-progress'>已学{studyProgress}</div>)\n    }\n    if(!!studyStatus){\n      emptyArr.push(<div className='study-status'>{studyStatus}</div>)\n    }\n    return emptyArr\n\n  }\n  getEveryPageArr = (directData,totalPage) => {\n    let newArr=[]\n    for(let i=1 ;i<=totalPage ;i++){\n      for(let j=0 ; j<=directData.length;j+5){\n        newArr.push(directData.splice(j,j+5))\n      }\n    }\n    return newArr\n  }\n  render() {\n    const { directData = []} = this.props\n    const totalPage=parseInt(Math.ceil(directData.length / 5))\n    return (\n      <div className='DirectContent'>\n        {/* {\n          directData.map((item, index) => {\n            const { attribute, sectionTitle, teacherName, partNum, liveTime, playNum, studyProgress, studyStatus, videoTime } = item\n            return (\n              <div key={index} className='content-container'>\n                <div className='lesson-attr-container'>\n                  {attribute === 1 ? <div className='live attr-common '></div>\n                    : attribute === 2 ? <div className='trailer attr-common '></div>\n                      : attribute === 3 ? <div className='attr-play attr-common '></div>\n                        : attribute === 4 ? <div className='studied attr-common '></div>\n                          : ''\n                  }\n                  {!!videoTime ? <div className='video-time'>{videoTime}</div> : ''}\n                  <div className='section-title'>{index + 1}.{sectionTitle}</div>\n                </div>\n                <div className='lesson-info-container'>\n                  <div className='teacher-name'>{teacherName}</div>\n                  {this.renderSubLive(partNum, liveTime, playNum, studyProgress, studyStatus)}\n                </div>\n              </div>\n\n            )\n          })\n        } */}\n        <div>{this.getEveryPageArr(directData,totalPage)}</div>\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}